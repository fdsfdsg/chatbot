{
  "_args": [
    [
      "husky@next",
      "/home/ubuntu"
    ]
  ],
  "_from": "husky@next",
  "_hasShrinkwrap": false,
  "_id": "husky@4.0.0-beta.5",
  "_inCache": true,
  "_installable": true,
  "_location": "/husky",
  "_nodeVersion": "12.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/husky_4.0.0-beta.5_1571651776271_0.2607288130899059"
  },
  "_npmUser": {
    "email": "typicode@gmail.com",
    "name": "typicode"
  },
  "_npmVersion": "6.11.3",
  "_phantomChildren": {},
  "_requested": {
    "name": "husky",
    "raw": "husky@next",
    "rawSpec": "next",
    "scope": null,
    "spec": "next",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/husky/-/husky-4.0.0-beta.5.tgz",
  "_shasum": "b89febfc0812f2de6f0e29142f147aed946fac6a",
  "_shrinkwrap": null,
  "_spec": "husky@next",
  "_where": "/home/ubuntu",
  "author": {
    "email": "typicode@gmail.com",
    "name": "Typicode"
  },
  "bin": {
    "husky-run": "./run.js",
    "husky-upgrade": "./lib/upgrader/bin.js"
  },
  "bugs": {
    "url": "https://github.com/typicode/husky/issues"
  },
  "collective": {
    "type": "opencollective",
    "url": "https://opencollective.com/husky"
  },
  "dependencies": {
    "chalk": "^2.4.2",
    "ci-info": "^2.0.0",
    "cosmiconfig": "^5.2.1",
    "get-stdin": "^7.0.0",
    "opencollective-postinstall": "^2.0.2",
    "pkg-dir": "^4.2.0",
    "please-upgrade-node": "^3.2.0",
    "slash": "^3.0.0",
    "which-pm-runs": "^1.0.0"
  },
  "description": "Prevents bad commit or push (git hooks, pre-commit/precommit, pre-push/prepush, post-merge/postmerge and all that stuff...)",
  "devDependencies": {
    "@types/ci-info": "^2.0.0",
    "@types/cosmiconfig": "^5.0.3",
    "@types/jest": "^24.0.18",
    "@types/mkdirp": "^0.5.2",
    "@types/node": "^12.7.12",
    "@typescript-eslint/eslint-plugin": "^2.3.3",
    "@typescript-eslint/parser": "^2.3.3",
    "cross-env": "^6.0.3",
    "del": "^5.1.0",
    "del-cli": "^3.0.0",
    "eslint": "^6.5.1",
    "eslint-config-prettier": "^6.4.0",
    "eslint-config-xo-space": "^0.21.0",
    "eslint-plugin-prettier": "^3.1.1",
    "formatree": "^1.0.2",
    "jest": "^24.9.0",
    "markdown-toc": "^1.2.0",
    "mkdirp": "^0.5.1",
    "pinst": "^1.1.1",
    "pkg-ok": "^2.3.1",
    "prettier": "^1.18.2",
    "tempy": "^0.3.0",
    "ts-jest": "^24.1.0",
    "typescript": "^3.6.4"
  },
  "directories": {},
  "dist": {
    "fileCount": 20,
    "integrity": "sha512-2pjLVRjXTkWoNpCFFltAiVD+qpaXDfVEldnzINgI5N7ncxY1cryFvUZnYoSQIG9NN7QDLZ6AtO/HtNObjBln6g==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdrYDBCRA9TVsSAnZWagAAbRcP+wRNoF8Gw8IUy4h2TxW4\n6Itj/h3YdRuODWI8csdGbxIWhYhjjffF0xyVJ5s5t2XR/slbmyEniyoolDcp\nf7BRJoJ1/ZcUPVB2GV8Z0mSzvIZS/YU0lRfnrVPKSijzFoLLwg1aGJM1t5C7\nhxzmBTxDbeiOGEDiNo24WWw5PhuCET59PbXS3K66gESOwuqVByCOSKMJNW/I\nn0IRou2GLksIpL58+PFQatyTnsbBTpsnY1xg9qxMamcg3OhhIkCHPrhFSLIF\nKIX6uEcYtoESZMlxOlMwpKlXv5YOtBPwrxhwGXwJZip5YTVVZF+q58lXrMkc\nF0MuJMbMFBJrmxcmLGZPe4MB7Cp2lRzYbn16koP6IKXi3gcbqEErLZ/Z7hGI\nVlIHpxYliSPLF+x1TqKCzRvNhO/3xgKmft6gIQFyRqL7t3zmp/sIuSTA+MsZ\nThewIMNgk0/UuDknclY4CHlvLabgjZgGfNtgGnE9+A4ufKxTrgQoMWhwA3G1\n9KMOlw/hGx18dXuYl2k02o9dH5cnSoBaobGn2LdZG4G1Svxx7ILk6+HacddQ\nKLEjXVOA0zEXVes/Alqy754Kzgi00oibvYgo2FqANNDkvyS1tebwpIQBW5t/\nF/DdpXLLceTgqGdBgUOL1duWKtLVqcu+/gZ92FK2a0ApzCV2zGSsDmAVjqMi\nhDz5\r\n=8oVs\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "b89febfc0812f2de6f0e29142f147aed946fac6a",
    "tarball": "https://registry.npmjs.org/husky/-/husky-4.0.0-beta.5.tgz",
    "unpackedSize": 49116
  },
  "engines": {
    "node": ">=8.6.0"
  },
  "gitHead": "4fe7660a99a945ec9484ce01f969fd163378a4c8",
  "homepage": "https://github.com/typicode/husky#readme",
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "node",
      "ts"
    ],
    "testPathIgnorePatterns": [
      "__env__.ts",
      "node_modules"
    ],
    "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    }
  },
  "keywords": [
    "git",
    "hook",
    "hooks",
    "lint",
    "post-commit",
    "post-merge",
    "postcommit",
    "postmerge",
    "pre-commit",
    "pre-push",
    "precommit",
    "prepush",
    "test"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "typicode",
      "email": "typicode@gmail.com"
    }
  ],
  "name": "husky",
  "optionalDependencies": {},
  "readme": "__Announcement__ you can support the development of v4 major release on [__Open Collective__](https://opencollective.com/husky) and [__GitHub Sponsors__](https://github.com/users/typicode/sponsorship) 🚀\n\nSee [next](https://github.com/typicode/husky/tree/next) branch. Feedback is welcome 🙏\n\n---\n\n# Husky\n\n[![Financial Contributors on Open Collective](https://opencollective.com/husky/all/badge.svg?label=financial+contributors)](https://opencollective.com/husky) [![](https://img.shields.io/npm/dm/husky.svg?style=flat)](https://www.npmjs.org/package/husky) [![Mac/Linux Build Status](https://img.shields.io/travis/typicode/husky/master.svg?label=Mac%20OSX%20%26%20Linux)](https://travis-ci.org/typicode/husky) [![Windows Build status](https://img.shields.io/appveyor/ci/typicode/husky/master.svg?label=Windows)](https://ci.appveyor.com/project/typicode/husky)\n\n> Git hooks made easy\n\nHusky can prevent bad `git commit`, `git push` and more 🐶 _woof!_\n\n## Install\n\n```sh\nnpm install husky@next --save-dev\n```\n\n```js\n// package.json\n{\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm test\",\n      \"pre-push\": \"npm test\",\n      \"...\": \"...\"\n    }\n  }\n}\n```\n\n```sh\ngit commit -m 'Keep calm and commit'\n```\n\n_Existing hooks are kept. Requires Node `>= 8.6.0` and Git `>= 2.13.0`._\n\n__Note__: if you're trying Yarn v2, please install `husky@next`. See [next](https://github.com/typicode/husky/tree/next) branch.\n\n## Uninstall\n\n```sh\nnpm uninstall husky\n```\n\n_Git hooks installed by husky will be removed._\n\n## Financial Contributors\n\nBecome a financial contributor and help us sustain our community. [[Contribute](https://opencollective.com/husky/contribute)]\n\n### Organizations\n\nSupport this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https://opencollective.com/husky/contribute)]\n\n<!-- oc -->\n#### Gold Sponsors\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/0/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/0/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/1/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/1/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/2/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/2/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/3/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/3/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/4/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/4/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/5/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/5/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/6/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/6/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/7/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/7/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/8/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/8/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/9/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/9/avatar.svg\" height=\"60px\"></a>\n\n#### Silver Sponsors\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/0/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/0/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/1/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/1/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/2/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/2/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/3/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/3/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/4/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/4/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/5/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/5/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/6/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/6/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/7/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/7/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/8/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/8/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/9/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/9/avatar.svg\" height=\"45px\"></a>\n\n#### Bronze Sponsors\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/0/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/0/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/1/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/1/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/2/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/2/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/3/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/3/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/4/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/4/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/5/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/5/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/6/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/6/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/7/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/7/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/8/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/8/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/9/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/9/avatar.svg\" height=\"30px\"></a>\n<!-- oc-end -->\n\n### Individuals\n\n<a href=\"https://opencollective.com/husky\"><img src=\"https://opencollective.com/husky/individuals.svg?width=890\" height=\"60px\"></a>\n\n## Used by\n\n* [webpack](https://github.com/webpack/webpack)\n* [babel](https://github.com/babel/babel)\n* [create-react-app](https://github.com/facebookincubator/create-react-app)\n* ... and many other awesome projects\n\n## Guides\n\n<!-- toc -->\n\n  * [Upgrading from 0.14](#upgrading-from-014)\n  * [Supported hooks](#supported-hooks)\n  * [Access Git params and stdin](#access-git-params-and-stdin)\n  * [Skip all hooks (rebase)](#skip-all-hooks-rebase)\n  * [Disable auto-install](#disable-auto-install)\n  * [CI servers](#ci-servers)\n  * [Monorepos](#monorepos)\n  * [Node version managers](#node-version-managers)\n  * [Local commands (~/.huskyrc)](#local-commands-huskyrc)\n  * [Multiple commands](#multiple-commands)\n  * [Troubleshoot](#troubleshoot)\n    + [Debug messages](#debug-messages)\n    + [Hooks aren't running](#hooks-arent-running)\n    + [Commits aren't blocked](#commits-arent-blocked)\n    + [Commits are slow](#commits-are-slow)\n    + [Testing husky in a new repo](#testing-husky-in-a-new-repo)\n    + [ENOENT error 'node_modules/husky/.git/hooks'](#enoent-error-node_moduleshuskygithooks)\n\n<!-- tocstop -->\n\n### Upgrading from 0.14\n\nRun `husky-upgrade` to automatically upgrade your configuration:\n\n```\nnpx --no-install husky-upgrade\n```\n\nYou can also do it manually. Move your existing hooks to `husky.hooks` field and use raw Git hooks names. Also, if you were using `GIT_PARAMS` env variable, rename it to `HUSKY_GIT_PARAMS`.\n\n```diff\n{\n  \"scripts\": {\n-   \"precommit\": \"npm test\",\n-   \"commitmsg\": \"commitlint -E GIT_PARAMS\"\n  },\n+ \"husky\": {\n+   \"hooks\": {\n+     \"pre-commit\": \"npm test\",\n+     \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n+   }\n+ }\n}\n```\n\nStarting with `1.0.0`, husky can be configured using `.huskyrc`, `.huskyrc.json` or `.huskyrc.js` file.\n\n```js\n// .huskyrc\n{\n  \"hooks\": {\n    \"pre-commit\": \"npm test\"\n  }\n}\n```\n\n### Supported hooks\n\nHusky supports all Git hooks defined [here](https://git-scm.com/docs/githooks). Server-side hooks (`pre-receive`, `update` and `post-receive`) aren't supported.\n\n### Access Git params and stdin\n\nGit hooks can get parameters via command-line arguments and stdin. Husky makes them accessible via `HUSKY_GIT_PARAMS` and `HUSKY_GIT_STDIN` environment variables.\n\n```\n\"commit-msg\": \"echo $HUSKY_GIT_PARAMS\"\n```\n\n### Skip all hooks (rebase)\n\nDuring a rebase you may want to skip all hooks, you can use `HUSKY_SKIP_HOOKS` environment variable.\n\n```sh\nHUSKY_SKIP_HOOKS=1 git rebase ...\n```\n\n### Disable auto-install\n\nIf you don't want husky to automatically install Git hooks, simply set `HUSKY_SKIP_INSTALL` environment variable.\n\n```sh\nHUSKY_SKIP_INSTALL=1 npm install\n```\n\n### CI servers\n\nBy default, Husky won't install on CI servers.\n\n### Monorepos\n\nIf you have a multi-package repository, it's __recommended__ to use tools like [lerna](https://github.com/lerna/lerna) and have husky installed ONLY in the root `package.json` to act as the source of truth.\n\nGenerally speaking, you should AVOID defining husky in multiple `package.json`, as each package would overwrite previous husky installation.\n\n```sh\n.\n└── root\n    ├── .git\n    ├── package.json 🐶 # Add husky here\n    └── packages\n        ├── A\n        │   └── package.json\n        ├── B\n        │   └── package.json\n        └── C\n            └── package.json\n```\n\n```js\n// root/package.json\n{\n  \"private\": true,\n  \"devDependencies\": {\n    \"husky\": \"...\"\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lerna run test\"\n    }\n  }\n}\n```\n\n### Node version managers\n\nIf you're on Windows, husky will simply use the version installed globally on your system.\n\nFor macOS and Linux users:\n- if you're running `git` commands in the terminal, husky will use the version defined in your shell `PATH`. In other words, if you're a `nvm` user, husky will use the version that you've set with `nvm`.\n- if you're using a GUI client and `nvm`, it may have a different `PATH` and not load `nvm`, in this case the highest `node` version installed by `nvm` will usually be picked. You can also check `~/.node_path` to see which version is used by GUIs and edit if you want to use something else.\n\n### Local commands (~/.huskyrc)\n\nHusky will source `~/.huskyrc` file if it exists before running hook scripts.\nYou can use it, for example, to load a node version manager or run some `shell` commands before hooks.\n\n```sh\n# ~/.huskyrc\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n```\n\n### Multiple commands\n\nBy design and just like `scripts` defined in `package.json`, husky will run hook scripts as a single command. \n\n```json\n\"pre-commit\": \"cmd && cmd\"\n```\n\nThat said, if you prefer to use an array, the recommended approach is to define them in `.huskyrc.js`.\n\n```js\nconst tasks = arr => arr.join(' && ')\n\nmodule.exports = {\n  'hooks': {\n    'pre-commit': tasks([\n      'cmd',\n      'cmd'\n    ])\n  }\n}\n```\n\nTools like [npm-run-all](https://github.com/mysticatea/npm-run-all) can help too.\n\n### Troubleshoot\n\n#### Debug messages\n\n`HUSKY_DEBUG=1` can provide additional information when running commands.\n\n```\nHUSKY_DEBUG=1 npm install husky --save-dev\nHUSKY_DEBUG=1 git commit ...\n```\n\n#### Hooks aren't running\n\nCheck if hooks were installed. Verify that `.git/hooks/pre-commit` exists and have husky code. It should start with:\n\n```sh\n#!/bin/sh\n# husky...\n```\n\nIf not, you may have another Git hooks manager defined in your `package.json` overwriting husky's hooks. Check also the output during install, you should see:\n\n```\nhusky > Setting up git hooks\nhusky > Done\n```\n\n#### Commits aren't blocked\n\nFor a commit to be blocked, `pre-commit` script must exit with a non-zero exit code. If you commit isn't blocked, check your script exit code.\n\n#### Commits are slow\n\nHusky is fast and only adds a few tenth of seconds to commits (`~0.3s` on a low-end PC). So it's most probably related to how many things are done during `pre-commit`. You can often improve this by using cache on your tools (babel, eslint, ...) and using [lint-staged](https://github.com/okonet/lint-staged).\n\n#### Testing husky in a new repo\n\nTo isolate your issue, you can also create a new repo:\n\n```sh\nmkdir foo && cd foo\ngit init && npm init -y\nnpm install husky --save-dev\n\n# Add a failing pre-commit hook to your package.json:\n# \"pre-commit\": \"echo \\\"this should fail\\\" && exit 1\"\n\n# Make a commit\n```\n\n#### ENOENT error 'node_modules/husky/.git/hooks'\n\nVerify that your version of Git is `>=2.13.0`.\n\n## See also\n\n* [pkg-ok](https://github.com/typicode/pkg-ok) - Prevents publishing a module with bad paths or incorrect line endings\n* [please-upgrade-node](https://github.com/typicode/please-upgrade-node) - Show a message to upgrade Node instead of a stacktrace in your CLIs\n* [pinst](https://github.com/typicode/pinst) - dev only postinstall hook\n\n## Patreon\n\nPeople and companies supporting via Patreon: [thanks](https://thanks.typicode.com)\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/typicode/husky.git"
  },
  "scripts": {
    "build": "del-cli lib && tsc",
    "doc": "markdown-toc -i README.md",
    "fix": "npm run lint -- --fix",
    "install": "node husky install",
    "lint": "eslint . --ext .js,.ts --ignore-path .gitignore",
    "postinstall": "opencollective-postinstall || exit 0",
    "postpublish": "pinst --disable",
    "postversion": "git push && git push --tags",
    "prepublishOnly": "npm run test && npm run build && pinst --enable && pkg-ok",
    "preuninstall": "node husky uninstall",
    "test": "npm run lint && jest",
    "version": "jest -u && git add -A src/installer/__tests__/__snapshots__"
  },
  "version": "4.0.0-beta.5"
}
